<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>帖子 on WTY&#39;s Blog</title>
    <link>http://www.wty.center/zh/posts/</link>
    <description>Recent content in 帖子 on WTY&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>wty525582234@163.com (walter wu)</managingEditor>
    <webMaster>wty525582234@163.com (walter wu)</webMaster>
    <copyright>©2021, All Rights Reserved</copyright>
    <lastBuildDate>Thu, 23 Dec 2021 16:32:06 +0900</lastBuildDate>
    
        <atom:link href="http://www.wty.center/zh/posts/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Docker常用命令</title>
        <link>http://www.wty.center/zh/posts/docker_command/</link>
        <pubDate>Thu, 23 Dec 2021 16:32:06 +0900</pubDate>
        <author>wty525582234@163.com (walter wu)</author>
        <atom:modified>Thu, 23 Dec 2021 16:32:06 +0900</atom:modified>
        <guid>http://www.wty.center/zh/posts/docker_command/</guid>
        <description>Docker容器信息 ##查看docker容器版本 docker version ##查看docker容器信息 docker info ##查看docker容器帮助 docker --help 镜像操作 镜像查看 提示：对</description>
        <content:encoded>&lt;h2 id=&#34;docker容器信息&#34;&gt;Docker容器信息&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##查看docker容器版本
docker version
##查看docker容器信息
docker info
##查看docker容器帮助
docker --help
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;镜像操作&#34;&gt;镜像操作&lt;/h2&gt;
&lt;h3 id=&#34;镜像查看&#34;&gt;镜像查看&lt;/h3&gt;
&lt;p&gt;提示：对于镜像的操作可使用镜像名、镜像长ID和短ID。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##列出本地images
docker images
##含中间映像层
docker images -a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/docker/img.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##只显示镜像ID
docker images -q
##含中间映像层
docker images -qa  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/docker/1659331-20190521104927909-600452122.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##显示镜像摘要信息(DIGEST列)
docker images --digests
##显示镜像完整信息
docker images --no-trunc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/docker/1659331-20190521105114405-1780655005.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##显示指定镜像的历史创建；参数：-H 镜像大小和日期，默认为true；--no-trunc  显示完整的提交记录；-q  仅列出提交记录ID
docker history -H redis
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;镜像搜索&#34;&gt;镜像搜索&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##搜索仓库MySQL镜像
docker search mysql
## --filter=stars=600：只显示 starts&amp;gt;=600 的镜像
docker search --filter=stars=600 mysql
## --no-trunc 显示镜像完整 DESCRIPTION 描述
docker search --no-trunc mysql
## --automated ：只列出 AUTOMATED=OK 的镜像
docker search  --automated mysql
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/docker/img_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;镜像下载&#34;&gt;镜像下载&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##下载Redis官方最新镜像，相当于：docker pull redis:latest
docker pull redis
##下载仓库所有Redis镜像
docker pull -a redis
##下载私人仓库镜像
docker pull bitnami/redis
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/docker/img_2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;镜像删除&#34;&gt;镜像删除&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##单个镜像删除，相当于：docker rmi redis:latest
docker rmi redis
##强制删除(针对基于镜像有运行的容器进程)
docker rmi -f redis
##多个镜像删除，不同镜像间以空格间隔
docker rmi -f redis tomcat nginx
##删除本地全部镜像
docker rmi -f $(docker images -q)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;镜像构建&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##（1）编写dockerfile
cd /docker/dockerfile
vim mycentos
##（2）构建docker镜像
docker build -f /docker/dockerfile/mycentos -t mycentos:1.1
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;容器操作&#34;&gt;容器操作&lt;/h2&gt;
&lt;p&gt;提示：对于容器的操作可使用CONTAINER ID 或 NAMES。&lt;/p&gt;
&lt;h3 id=&#34;容器启动&#34;&gt;容器启动&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##新建并启动容器，参数：-i  以交互模式运行容器；-t  为容器重新分配一个伪输入终端；--name  为容器指定一个名称
docker run -i -t --name mycentos
##后台启动容器，参数：-d  已守护方式启动容器
docker run -d mycentos
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意：此时使用&amp;quot;docker ps -a&amp;quot;会发现容器已经退出。这是docker的机制：要使Docker容器后台运行，就必须有一个前台进程。解决方案：将你要运行的程序以前台进程的形式运行。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##启动一个或多个已经被停止的容器
docker start redis
##重启容器
docker restart redis
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;容器进程&#34;&gt;容器进程&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##top支持 ps 命令参数，格式：docker top [OPTIONS] CONTAINER [ps OPTIONS]
##列出redis容器中运行进程
docker top redis
##查看所有运行容器的进程信息
for i in  `docker ps |grep Up|awk &#39;{print $1}&#39;`;do echo / &amp;amp;&amp;amp;docker top $i; done
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;容器日志&#34;&gt;容器日志&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##查看redis容器日志，默认参数
docker logs rabbitmq
##查看redis容器日志，参数：-f  跟踪日志输出；-t   显示时间戳；--tail  仅列出最新N条容器日志；
docker logs -f -t --tail=20 redis
##查看容器redis从2019年05月21日后的最新10条日志。
docker logs --since=&amp;quot;2019-05-21&amp;quot; --tail=10 redis
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;容器的进入与退出&#34;&gt;容器的进入与退出&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##使用run方式在创建时进入
docker run -it centos /bin/bash
##关闭容器并退出
exit
##仅退出容器，不关闭
快捷键：Ctrl + P + Q
##直接进入centos 容器启动命令的终端，不会启动新进程，多个attach连接共享容器屏幕，参数：--sig-proxy=false  确保CTRL-D或CTRL-C不会关闭容器
docker attach --sig-proxy=false centos 
##在 centos 容器中打开新的交互模式终端，可以启动新进程，参数：-i  即使没有附加也保持STDIN 打开；-t  分配一个伪终端
docker exec -i -t  centos /bin/bash
##以交互模式在容器中执行命令，结果返回到当前终端屏幕
docker exec -i -t centos ls -l /tmp
##以分离模式在容器中执行命令，程序后台运行，结果不会反馈到当前终端
docker exec -d centos  touch cache.txt 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;查看容器&#34;&gt;查看容器&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##查看正在运行的容器
docker ps
##查看正在运行的容器的ID
docker ps -q
##查看正在运行+历史运行过的容器
docker ps -a
##显示运行容器总文件大小
docker ps -s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/docker/img_3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/docker/img_4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##显示最近创建容器
docker ps -l
##显示最近创建的3个容器
docker ps -n 3
##不截断输出
docker ps --no-trunc 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/docker/img_5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##获取镜像redis的元信息
docker inspect redis
##获取正在运行的容器redis的 IP
docker inspect --format=&#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&#39; redis
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;容器的停止与删除&#34;&gt;容器的停止与删除&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##停止一个运行中的容器
docker stop redis
##杀掉一个运行中的容器
docker kill redis
##删除一个已停止的容器
docker rm redis
##删除一个运行中的容器
docker rm -f redis
##删除多个容器
docker rm -f $(docker ps -a -q)
docker ps -a -q | xargs docker rm
## -l 移除容器间的网络连接，连接名为 db
docker rm -l db 
## -v 删除容器，并删除容器挂载的数据卷
docker rm -v redis
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;生成镜像&#34;&gt;生成镜像&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##基于当前redis容器创建一个新的镜像；参数：-a 提交的镜像作者；-c 使用Dockerfile指令来创建镜像；-m :提交时的说明文字；-p :在commit时，将容器暂停
docker commit -a=&amp;quot;DeepInThought&amp;quot; -m=&amp;quot;my redis&amp;quot; [redis容器ID]  myredis:v1.1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;容器与主机之间的数据拷贝&#34;&gt;容器与主机之间的数据拷贝&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##将rabbitmq容器中的文件copy至本地路径
docker cp rabbitmq:/[container_path] [local_path]
##将主机文件copy至rabbitmq容器
docker cp [local_path] rabbitmq:/[container_path]/
##将主机文件copy至rabbitmq容器，目录重命名为[container_path]（注意与非重命名copy的区别）
docker cp [local_path] rabbitmq:/[container_path]
&lt;/code&gt;&lt;/pre&gt;</content:encoded>
        <dc:creator>wty</dc:creator>
        <media:content url="http://www.wty.centerimages/docker/img_6.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>工具</category>
            
          
        
        
          
            
              <category>杂文</category>
            
          
        
        
      </item>
      
      <item>
        <title>sublime设置取消更新无效</title>
        <link>http://www.wty.center/zh/posts/sublime_setting/</link>
        <pubDate>Mon, 20 Dec 2021 12:00:06 +0900</pubDate>
        <author>wty525582234@163.com (walter wu)</author>
        <atom:modified>Mon, 20 Dec 2021 12:00:06 +0900</atom:modified>
        <guid>http://www.wty.center/zh/posts/sublime_setting/</guid>
        <description>sublime设置&amp;quot;update_check&amp;quot;: false,没有效果 Preferences-&amp;gt;Settings-U</description>
        <content:encoded>&lt;h1 id=&#34;sublime设置update_check-false没有效果&#34;&gt;sublime设置&amp;quot;update_check&amp;quot;: false,没有效果&lt;/h1&gt;
&lt;p&gt;Preferences-&amp;gt;Settings-User中设置&amp;quot;update_check&amp;quot;:false,（注意是英文符号，逗号结尾）&lt;/p&gt;
&lt;p&gt;可是没有什么效果，重启还是还是弹出来自动更新的提示，直到注册了软件之后：&lt;/p&gt;
&lt;p&gt;help－Enter License输入&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;—– BEGIN LICENSE —–  
TwitterInc  
200 User License  
EA7E-890007  
1D77F72E 390CDD93 4DCBA022 FAF60790  
61AA12C0 A37081C5 D0316412 4584D136  
94D7F7D4 95BC8C1C 527DA828 560BB037  
D1EDDD8C AE7B379F 50C9D69D B35179EF  
2FE898C4 8E4277A8 555CE714 E1FB0E43  
D5D52613 C3D12E98 BC49967F 7652EED2  
9D2D2E61 67610860 6D338B72 5CF95C69  
E36B85CC 84991F19 7575D828 470A92AB  
—— END LICENSE —— 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果提示已过期，上网重新找注册码！！&lt;/p&gt;
</content:encoded>
        <dc:creator>wty</dc:creator>
        <media:content url="http://www.wty.centerimages/feature1/sublime.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>工具</category>
            
          
        
        
          
            
              <category>杂文</category>
            
          
        
        
      </item>
      
      <item>
        <title>傻瓜式搭建科学上网梯子（VPN）</title>
        <link>http://www.wty.center/zh/posts/ssr_vpn/</link>
        <pubDate>Mon, 20 Dec 2021 12:00:06 +0900</pubDate>
        <author>wty525582234@163.com (walter wu)</author>
        <atom:modified>Mon, 20 Dec 2021 12:00:06 +0900</atom:modified>
        <guid>http://www.wty.center/zh/posts/ssr_vpn/</guid>
        <description>前言 搭建梯子主要分为以下几个步骤： 租借vps; 安装ssh远程登陆客户端； 通过脚本安装Shadowsocks; 安装SSR客户端，科学上网; 租借</description>
        <content:encoded>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;搭建梯子主要分为以下几个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;租借vps;&lt;/li&gt;
&lt;li&gt;安装ssh远程登陆客户端；&lt;/li&gt;
&lt;li&gt;通过脚本安装Shadowsocks;&lt;/li&gt;
&lt;li&gt;安装SSR客户端，科学上网;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;租借vps&#34;&gt;租借vps&lt;/h2&gt;
&lt;p&gt;上图所展示的就是国外常用的vps服务商，以前用过vultr和hostinger，体验并不算特别好，端口经常被封，网速还不怎么快。我现在用的是国内腾讯云的香港服务器。vultr里面买一个最低配置的也是一个月5美刀，腾讯云的话一年三百多，算起来价格差不多。所以还是强烈推荐国内用户使用腾讯云的服务器把！！&lt;/p&gt;
&lt;h2 id=&#34;安装ssh远程登陆客户端&#34;&gt;安装ssh远程登陆客户端&lt;/h2&gt;
&lt;p&gt;百度搜索finalShell&lt;/p&gt;
&lt;p&gt;傻瓜式下一步安装；&lt;br /&gt;
连接到自己的服务器&lt;br /&gt;
&lt;img src=&#34;http://www.wty.center/images/vpn/image-20211220223335002.png&#34; alt=&#34;image-20211220223335002&#34; /&gt;&lt;/p&gt;
&lt;p&gt;成功登录，出现[root@xxxx ~]#后，全部复制以下代码粘贴回车（一键安装脚本）&lt;/p&gt;
&lt;h2 id=&#34;通过脚本安装shadowsockss&#34;&gt;通过脚本安装Shadowsockss&lt;/h2&gt;
&lt;p&gt;输入一下命令回车执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;wget –no-check-certificate  https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/vpn/202001061578248107812711.jpg&#34; alt=&#34;202001061578248107812711&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后添加文件权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;chmod +x shadowsocks.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;接着执行脚本，设置ss的密码端口和加密方式。&lt;br /&gt;
&lt;img src=&#34;http://www.wty.center/images/vpn/image-20211220223925641.png&#34; alt=&#34;image-20211220223925641&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;./shadowsocks.sh 2&amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tee shadowsocks.log
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后按照要求输入密码、端口、加密方式&lt;/p&gt;
&lt;p&gt;按任意键开始…或按Ctrl+C取消&lt;/p&gt;
&lt;p&gt;输入完后，脚本执行自动安装，此时需要等待5-15几分钟安装完成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/vpn/202001061578248189271712.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;当出现上图信息时，说明SS已经搭建成功。&lt;/p&gt;
&lt;p&gt;如果需要修改配置信息输入以下命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;vim  /etc/shadowsocks.json
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个就是配置文件，按a进行输入，:wq 进行保存；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/vpn/image-20211220224412248.png&#34; alt=&#34;image-20211220224412248&#34; /&gt;&lt;/p&gt;
&lt;p&gt;保存成功后执行一下命令进行重启&lt;/p&gt;
&lt;p&gt;常用：&lt;/p&gt;
&lt;p&gt;启动&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;ssserver -c /etc/shadowsocks.json -d start
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;停止&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;ssserver -c /etc/shadowsocks.json -d stop
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;重启&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;ssserver -c /etc/shadowsocks.json -d reload
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;安装ssr客户端科学上网&#34;&gt;安装SSR客户端，科学上网&lt;/h2&gt;
&lt;p&gt;客户端下载好直接双击就可以使用了，不需要安装；&lt;/p&gt;
&lt;p&gt;Windows 版本SSR客户端&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.magento2u.com/wp-content/uploads/ShadowsocksR-4.7.0-win.zip&#34;&gt;https://www.magento2u.com/wp-content/uploads/ShadowsocksR-4.7.0-win.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;macOS 版本SSR客户端&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.magento2u.com/wp-content/uploads/shadowsocksr-android-3.5.4.zip&#34;&gt;https://www.magento2u.com/wp-content/uploads/shadowsocksr-android-3.5.4.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Android 版本SSR客户端&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.magento2u.com/wp-content/uploads/ShadowsocksX-NG-R8.zip&#34;&gt;https://www.magento2u.com/wp-content/uploads/ShadowsocksX-NG-R8.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开以后，在桌面右下角任务栏出现，点右键，点从粘贴板导入，然后就是见证奇迹的时刻，我们成功了。安卓端的ssr工具也很多，自行下载安装包安装就好，用法都差不多，ios下，国内市场的ssr客户端都下架了，需要去美区App Store下载，美区账号在淘宝买就好，一般一两块钱一个，ios端推荐Shadowrocket，不过要花钱买，几块钱，用我们之前注册的PayPal就好，也有个免费的Patatso Lite。用法都差不多，从剪贴板导入ssr地址就好。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.wty.center/images/vpn/image-20211220225312622.png&#34; alt=&#34;image-20211220225312622&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;p&gt;相对于ssr我还是比较倾向于用ss来作为服务端，以前用ssr的时候经常段都被封，后面换了ss端口很少被封了。客户端使用ssr是因为体验感比ss强多了。。&lt;/p&gt;
&lt;h2 id=&#34;heading&#34;&gt;&lt;/h2&gt;
</content:encoded>
        <dc:creator>wty</dc:creator>
        <media:content url="http://www.wty.centerimages/feature1/graph.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>科学上网</category>
            
          
            
              <category>ss</category>
            
          
        
        
          
            
              <category>杂文</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
